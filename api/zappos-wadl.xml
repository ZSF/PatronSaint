<?xml version="1.0" encoding="UTF-8"?>
<application xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:apigee="http://api.apigee.com/wadl/2010/07/"
	xmlns="http://wadl.dev.java.net/2009/02"
	xsi:schemaLocation="http://wadl.dev.java.net/2009/02http://apigee.com/schemas/wadl-schema.xsdhttp://api.apigee.com/wadl/2010/07/http://apigee.com/schemas/apigee-wadl-extensions.xsd">
	<resources base="http://api.zappos.com">

		<resource path="/AutoComplete?term={term}">

			<param name="term" type="xsd:string" style="query" required="true"
				default=''>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-auto-complete">
					String to be completed, automatically.
					Please don't use this API to cheat
					at Words for Friends.
				</doc>
			</param>
			<method id="autocomplete_api" name="GET" apigee:displayName="AutoComplete">
				<apigee:tags>
					<apigee:tag primary="true">AutoComplete</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/AutoComplete?term={term}' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-auto-complete">
					If you want to implement the always
					popular "auto-complete" for
					search terms on your website, this is
					the API for you! We use this
					same auto-complete functionality on
					Zappos.com itself.
            		</doc>
			</method>
		</resource>
		<resource path="/Brand/{id}">

			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623'>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-brand">
					The includes parameter is a json array
					of optional values that can be
					returned from this API 
				</doc>
			</param>
			<param name="includes" type="xsd:array" style="query" required="false"
				default='["realBrandId","faqText","aboutText","newStyleCount","allStyleCount"]' />
			<method id="brand_api" name="GET" apigee:displayName="GetBrand">
				<apigee:tags>
					<apigee:tag primary="true">Brand</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Brand/{id}?includes=["{fields}"]' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-brand">
					Returns details on the brands Zappos
					carries. To get a full list of
					brands, use Search API
					http://api.zappos.com/Search?facets=["brandFacet"]
            	        </doc>
			</method>
		</resource>
		<resource path="/CoreValue">
			<method id="corevalue_api" name="GET" apigee:displayName="GetCoreValues">
				<apigee:tags>
					<apigee:tag primary="true">Core Value</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/CoreValue' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-corevalue">
					"Core Values are what separate us from
					the Robots" - John Connor
            		</doc>
			</method>
		</resource>
		<resource path="/CoreValue/{id}">
			<method id="corevalue_id_api" name="GET" apigee:displayName="GetCoreValue">
				<apigee:tags>
					<apigee:tag primary="true">Core Value</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/CoreValue/{id}' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-corevalue">
					What happens if you try and push the
					boundaries of our 10 core values?
				</doc>
			</method>
		</resource>
		<resource path="/CoreValue/random">
			<method id="corevalue_random_api" name="GET"
				apigee:displayName="GetCoreValueRandom">
				<apigee:tags>
					<apigee:tag primary="true">Core Value</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/CoreValue/random' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-corevalue">
					For correctness, probably should call
					this pseudo-random
            		</doc>
			</method>
		</resource>

		<resource path='/Image?styleId=["{styleId}"]'>
			<param name="styleId" required="true" type="xsd:string" style="query"
				default='6888' />
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623'>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-image">
					Images are two dimensional, products
					are three dimensional. Using the
					TYPE parameter you can specify
					which views of the product you want
					returned. 
			</doc>
			</param>
			<param name="type" required="false" type="xsd:json" style="query"
				default='["PAIR", "LEFT", "RIGHT", "TOP", "THUMBNAIL"]'>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-image">
					Recipe is a sizing transformation for
					an image. For example, we may have
					the LEFT type of an item, but
					want a smaller version for a preview.
					We would request type=LEFT and
					recipe=TINY. If we wanted a zoom-in
					feature, we could request LEFT
					and recipe=2x. Not all image types
					have recipes.
			</doc>
			</param>
			<param name="recipe" required="false" type="xsd:json" style="query"
				default='["2x"]'>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-image">
					The includes parameter is a json array
					of optional values that can be
					returned from this API 
			</doc>
			</param>
			<param name="includes" type="xsd:array" style="query" required="false"
				default='["colorId","width","height","uploadDate","isHighResolution","tiles"]' />
			<method id="image_styleId_api" name="GET" apigee:displayName="GetImageStyleId">
				<apigee:tags>
					<apigee:tag primary="true">Image</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Image?styleId=["{styleId}"]%26includes=["{fields}"]%26recipe=["{recipes}"]%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-image">
					Returns images for one style or a list
					of styles (denoted as a JSON Array
					- ["styleId1","styleId2"])
            		</doc>
			</method>
		</resource>

		<resource path="/Image?productId={productId}">

			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="type" required="false" type="xsd:array" style="query"
				default='["PAIR", "LEFT", "RIGHT", "TOP", "THUMBNAIL"]'>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-image">
					Images are two dimensional, products
					are three dimensional. Using the
					TYPE parameter you can specify
					which views of the product you want
					returned. 
			</doc>
			</param>
			<param name="recipe" required="false" type="xsd:json" style="query"
				default='["2x"]'>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-image">
					Recipe is a sizing transformation for
					an image. For example, we may have
					the LEFT type of an item, but
					want a smaller version for a preview.
					We would request type=LEFT and
					recipe=TINY. If we wanted a zoom-in
					feature, we could request LEFT
					and recipe=2x. Not all image types
					have recipes.
			</doc>
			</param>
			<param name="includes" type="xsd:array" style="query" required="false"
				default='["colorId","width","height","uploadDate","isHighResolution","tiles"]'>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-image">
					The includes parameter is a json array
					of optional values that can be
					returned from this API 
			</doc>
			</param>
			<method id="image_productid_api" name="GET"
				apigee:displayName="GetImageProductId">
				<apigee:tags>
					<apigee:tag primary="true">Image</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Image?productId={productId}%26includes=["{fields}"]%26recipe=["{recipes}"]%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-image">
					Zappos doesn't use stock imagery. We
					have real photographers and live
					models to present our products.
					Some of those products are
					underwear and sometimes the underwear is
					too revealing on the live
					models and needs to be touched up. When
					this happens Zappos has
					skilled artists touch up the photos so our
					site remains family
					friendly. Calling our Image API is like putting
					all of these people
					to work just for you. Maybe you should tip them.
				</doc>
			</method>
		</resource>
		<resource path="/Image/list/recipes">
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<method id="image_recipes_api" name="GET" apigee:displayName="GetImageRecipes">
				<apigee:tags>
					<apigee:tag primary="true">Image</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Image/list/recipes?key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-image">
					A recipe is a sizing transformation for
					an image. For example, we
					may have the LEFT type of an item, but
					want a smaller version for a
					preview. We would request type=LEFT and
					recipe=TINY. If we wanted a
					zoom-in feature, we could request LEFT
					and recipe=2x
            		</doc>
			</method>
		</resource>


		<resource path='/Product?id=["{id1}","{id2}"]'>
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="id1" required="true" type="xsd:int" style="query"
				default='7564933' />
			<param name="id2" required="true" type="xsd:int" style="query"
				default='7590514'>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-product">
					Either a single SKU or a JSON array of
					multiple SKUs. A SKU uniquely
					identifies a product on Zappos.
     			</doc>
			</param>
			<param name="includes" type="xsd:array" style="query" required="false"
				default='["colorId","width","height","uploadDate","isHighResolution","tiles"]'>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-product">
					The includes parameter is a json array
					of optional values that can be
					returned from this API 
			</doc>
			</param>
			<method id="product_api" name="GET" apigee:displayName="GetProduct">
				<apigee:tags>
					<apigee:tag primary="true">Product</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Product?id=["{id1}","{id2}"]%26includes=["{fields}"]%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-product">
					Returns images for one style or a list
					of styles (denoted as a JSON Array
					- ["styleId1","styleId2"])
            		</doc>
			</method>
		</resource>
		<resource path="/Review?productId={productid}">
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="productId" required="true" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-review">
					The SKU number of the product to get
					the reviews from.
                </doc>
			</param>
			<param name="offset" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-review">
					Use this number to change the starting point from which we start
					grabbing reviews. We can only return up to 30 at a time.
                 </doc>
			</param>
			<param name="page" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-review">
					Use this to grab a particular page of reviews. Reviews come in pages
					that are 30 reviews long.
                </doc>
			</param>
			<method id="review_api " name="GET" apigee:displayName="GetProductReviews">
				<apigee:tags>
					<apigee:tag primary="true">Review</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Review?productId={productId}%26page={page}%26offset={offset}%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-review">
					Returns reviews for a given product
                	</doc>
			</method>
		</resource>
		<resource path="/Search?term={term}">
			<param name="search_term" required="true" type="xsd:string"
				style="query" default='boots' />
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="fields" required="false" type="xsd:string" style="query"
				default='productDescription' />
			<method id="search" name="GET" apigee:displayName="GetSearch">
				<apigee:tags>
					<apigee:tag primary="true">Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Search/term/{search_term}?includes=["{fields}"]%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-api#Includes">
					Perform a real time search against our totally
					impressive product catalog.
				</doc>
			</method>
		</resource>

		<resource path="/Search?term={term}">
			<param name="search_term" required="true" type="xsd:string"
				style="query" default='boots' />
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="name" required="false" type="xsd:string" style="query"
				default='boots' />
			<param name="includes" required="false" type="xsd:array" style="query"
				default='["{name}"]' />
			<param name="field" required="true" type="xsd:string" style="query"
				default='price' />
			<param name="order" required="true" type="xsd:string" style="query"
				default='desc' />

			<method id="SortedSearch" name="GET" apigee:displayName="GetSortedSearch">
				<apigee:tags>
					<apigee:tag primary="true">Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example
					url='/Search/term/{search_term}?sort={"{field}":"{order}"}%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-api#Includes">
					Sort the search result by any field in the response
				</doc>
			</method>
		</resource>

		<resource path="/Search?term={term}">
			<param name="search_term" required="true" type="xsd:string"
				style="query" default='boots' />
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="name" required="false" type="xsd:string" style="query"
				default='boots' />
			<param name="includes" required="false" type="xsd:array" style="query"
				default='["{name}"]' />
			<param name="limit" type="int" style="query" required="true"
				default='10' />
			<method id="LimitSearch" name="GET" apigee:displayName="GetLimitSearch">
				<apigee:tags>
					<apigee:tag primary="true">Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Search/term/{search_term}?limit={limt}%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-api#Includes">
					If you are afraid of too many search results, limit yourself.
				</doc>
			</method>
		</resource>

		<resource path="/Search?term={term}">
			<param name="search_term" required="true" type="xsd:string"
				style="query" default='boots' />
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="name" required="false" type="xsd:string" style="query"
				default='boots' />
			<param name="includes" required="false" type="xsd:array" style="query"
				default='["{name}"]' />
			<param name="limit" required="true" type="xsd:int" style="query"
				default='10' />
			<param name="page" required="true" type="xsd:int" style="query"
				default='1' />
			<method id="SearchPaginated" name="GET" apigee:displayName="GetSearchPaginated">
				<apigee:tags>
					<apigee:tag primary="true">Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example
					url='/Search/term/{search_term}?limit={limt}&amp;page={page}%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-api#Includes">
					L2Paginate
				</doc>
			</method>
		</resource>

		<resource path='/Search/term/{search_term}?includes=["facets"]'>
			<param name="search_term" required="true" type="xsd:string"
				style="query" default='boots' />
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="name" required="false" type="xsd:string" style="query"
				default='boots' />
			<param name="includes" required="false" type="xsd:array" style="query"
				default='["{name}"]' />
			<method id="GetFacetGrouping" name="GET" apigee:displayName="GetFacetGrouping">
				<apigee:tags>
					<apigee:tag primary="true">Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Search/term/{search_term}?includes=["facets"]%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-api#Includes">
					Facets are like a SQL GROUP BY clause and can be used to group results.
				</doc>
			</method>
		</resource>

		<resource
			path='/Search/term/includes=["facets"]&amp;facets=["{facetField}","{facetField}"]'>
			<param name="search_term" required="true" type="xsd:string"
				style="query" default='boots' />
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="name" required="false" type="xsd:string" style="query"
				default='boots' />
			<param name="includes" required="false" type="xsd:array" style="query"
				default='["{name}"]' />
			<param name="facetField" required="false" type="xsd:array"
				style="query" default='productTypeFacet' />
			<method id="GetCustomizedFacetGrouping" name="GET"
				apigee:displayName="GetCustomizedFacetGrouping">
				<apigee:tags>
					<apigee:tag primary="true">Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example
					url='/Search/term/{search_term}?includes=["facets"]&amp;facets=["{facetField}","{facetField}"]%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-api#Includes">
					Specify which facets you would like back in your grouping
				</doc>
			</method>
		</resource>

		<resource
			path='/Search/term/{search_term}?filters={"{Facet_Field}":["{Facet_Value}"]}'>
			<param name="search_term" required="true" type="xsd:string"
				style="query" default='boots' />
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="name" required="false" type="xsd:string" style="query"
				default='boots' />
			<param name="Facet_Field" required="true" type="xsd:string"
				style="query" default='colorFacet' />
			<param name="Facet_Value" required="true" type="xsd:string"
				style="query" default='blue' />
			<method id="GetFacetFilters" name="GET" apigee:displayName="GetFacetFilters">
				<apigee:tags>
					<apigee:tag primary="true">Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example
					url='/Search/term/{search_term}?filters={"{Facet_Field}":["{Facet_Value}"]}%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-api#Includes">
					Filters are a way of limiting your results, similar to a SQL WHERE clause
				</doc>
			</method>
		</resource>
		<resource path='/Search?list=facetFields'>
			<param name="search_term" required="true" type="xsd:string"
				style="query" default='boots' />
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="name" required="false" type="xsd:string" style="query"
				default='boots' />
			<param name="includes" required="false" type="xsd:array" style="query"
				default='["{name}"]' />
			<method id="GetFacetFields" name="GET" apigee:displayName="GetFacetFields">
				<apigee:tags>
					<apigee:tag primary="true">Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Search?list=facetFields%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-api#Includes">
					See all available facets
				</doc>
			</method>
		</resource>
		
		<resource
			path="/Search/Similarity?type=visualSearch&amp;limit={limit}&amp;styleId={styleId}&amp;emphasis={options}">
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="limit" required="false" type="xsd:string" style="query"
				default='10' />
			<param name="styleId" required="true" type="xsd:string" style="query"
				default='6888' />
			<param name="options" required="true" type="xsd:string" style="query"
				default='color' />
			<param name="type" required="true" type="xsd:string" style="query"
				default='visiualSearch'>
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					Specifies the type of similarity search to perform.
					Options are visualSearch
					and moreLikeThis. VisualSearch returns
					products that look like this
					style and moreLikeThis returns products
					with similar attributes as
					the specified product.
     			</doc>
			</param>
			<param name="styleId" required="true" type="xsd:string" style="query"
				default=''>
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					StyleId for the product to match similar results with.
				</doc>
			</param>
			<param name="limit" required="true" type="xsd:string" style="query"
				default='10'>
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					If we return less than your requested limit, it's
					because you need to
					chill out. We'll never return more than 100 at a
					time though.
     			</doc>
			</param>
			<param name="emphasis" type="xsd:string" style="query" default='color'>
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					VisualSearch: color, shape, texture. MoreLikeThis:
					color, style. Use our captive
					algorithms to choose how the match
					will be performed.
     			</doc>
			</param>
			<method id="similarity_visual_search_api" name="GET" apigee:displayName="GetSimilarityVisualSearch">
				<apigee:tags>
					<apigee:tag primary="true">Similarity Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example
					url='/Search/Similarity?type=visualSearch&amp;limit={limit}&amp;styleId={style_id}&amp;emphasis={options}%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					Visual Search will return products that look like the specified style_id.
				</doc>
			</method>
		</resource>
		<resource
			path="/Search/Similarity?type=moreLikeThis&amp;limit={limit}&amp;styleId={styleId}&amp;emphasis={options}">
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="limit" required="false" type="xsd:string" style="query"
				default='10' />
			<param name="styleId" required="true" type="xsd:string" style="query"
				default='6888' />
			<param name="options" required="true" type="xsd:string" style="query"
				default='color' />
			<param name="type" required="true" type="xsd:string" style="query"
				default='visiualSearch'>
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					Specifies the type of similarity search to perform.
					Options are visualSearch
					and moreLikeThis. VisualSearch returns
					products that look like this
					style and moreLikeThis returns products
					with similar attributes as
					the specified product.
     			</doc>
			</param>
			<param name="styleId" required="true" type="xsd:string" style="query"
				default=''>
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					StyleId for the product to match similar results with.
				</doc>
			</param>
			<param name="limit" required="true" type="xsd:string" style="query"
				default='10'>
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					If we return less than your requested limit, it's
					because you need to
					chill out. We'll never return more than 100 at a
					time though.
     			</doc>
			</param>
			<param name="emphasis" type="xsd:string" style="query" default='color'>
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					VisualSearch: color, shape, texture. MoreLikeThis:
					color, style. Use our captive
					algorithms to choose how the match
					will be performed.
     			</doc>
			</param>
			<method id="similarity_more_like_this_api" name="GET" apigee:displayName="GetMoreLikeThisSearch">
				<apigee:tags>
					<apigee:tag primary="true">Similarity Search</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example
					url='/Search/Similarity?type=moreLikeThis&amp;limit={limit}&amp;styleId={style_id}&amp;emphasis={options}%26key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title=""
					apigee:url="http://developer.zappos.com/docs/api-search-similarity">
					More Like This Search will return products that share common attributes with the specified style_id.
				</doc>
			</method>
		</resource>
		<resource path="/Statistics/type/latestStyles">
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="type" required="true" type="xsd:string" style="query"
				default=''>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					This string selects the type of
					statistics you want to get. There are
					only two valid types at the
					moment. The latestStyles type will
					return a list of styles sold in
					the last hour, while the topStyles
					will return the top 10 styles
					that have been sold in the past few
					days.
                 </doc>
			</param>
			<param name="filter" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Filter the results by brand,
					categorization or gender.
					Examples:{"brand":{"name":"Nike"}} gets
					only Nike brand products.
					{"categorization":{"categoryType":"Jewelry"}} gets products that
					are Jewlery. Other categorization options include productType and
					subcategoryType. {"gender":"F"} gets products for the female
					gender. You can combine these as well:
					{"gender":"F","brand":{"name":"Nike"},"categorization":{"categoryType":"Jewelry"}}
					gets female Nike brand Jewlery.
                </doc>
			</param>
			<param name="location" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Filters the results by location. You
					can include state or zip
					restrictions. Examples: {"zip":89074} grabs
					from products ordered
					in that zip code. {"state":"CA"} grabs from
					products ordered in
					California.
                </doc>
			</param>
			<param name="startDate" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Limits results by a start date. Must be
					in the format MM/DD/YYYY HH:MM.
				</doc>
			</param>
			<param name="startOrderItemId" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Limits by order item id. You can get
					these from lastestStyles calls to
					this api.
                </doc>
			</param>
			<param name="limit" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					A number that limits the results you
					get. 200 is the maximum number
					of results you can get. Requesting 0
					or less results is a very
					inefficient way to generate an empty list.
				</doc>
			</param>
			<param name="timespan" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					For topStyles, you can specify how many
					days are used. The only valid
					numbers for this parameter are 1, 7
					and 30.
                </doc>
			</param>
			<param name="option" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					You can cascade results by setting this
					field to "cascade". This means
					that if you make a very specific
					request that has no results, it
					will run similar filters that are
					less specific until results
					appear. For example, using a zip code
					may expand to the state the
					zip code the zip code is in.
                </doc>
			</param>
			<method id="statistics_latest_styles_api" name="GET" apigee:displayName="GetLatestStyles">
				<apigee:tags>
					<apigee:tag primary="true">Statistics</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Statistics/type/latestStyles?key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Returns the latest styles and top
					styles being sold at Zappos.
                	</doc>
			</method>
		</resource>
		<resource path="/Statistics/type/topStyles">
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="type" required="true" type="xsd:string" style="query"
				default=''>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					This string selects the type of
					statistics you want to get. There are
					only two valid types at the
					moment. The latestStyles type will
					return a list of styles sold in
					the last hour, while the topStyles
					will return the top 10 styles
					that have been sold in the past few
					days.
                 </doc>
			</param>
			<param name="filter" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Filter the results by brand,
					categorization or gender.
					Examples:{"brand":{"name":"Nike"}} gets
					only Nike brand products.
					{"categorization":{"categoryType":"Jewelry"}} gets products that
					are Jewlery. Other categorization options include productType and
					subcategoryType. {"gender":"F"} gets products for the female
					gender. You can combine these as well:
					{"gender":"F","brand":{"name":"Nike"},"categorization":{"categoryType":"Jewelry"}}
					gets female Nike brand Jewlery.
                </doc>
			</param>
			<param name="location" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Filters the results by location. You
					can include state or zip
					restrictions. Examples: {"zip":89074} grabs
					from products ordered
					in that zip code. {"state":"CA"} grabs from
					products ordered in
					California.
                </doc>
			</param>
			<param name="startDate" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Limits results by a start date. Must be
					in the format MM/DD/YYYY HH:MM.
				</doc>
			</param>
			<param name="startOrderItemId" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Limits by order item id. You can get
					these from lastestStyles calls to
					this api.
                </doc>
			</param>
			<param name="limit" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					A number that limits the results you
					get. 200 is the maximum number
					of results you can get. Requesting 0
					or less results is a very
					inefficient way to generate an empty list.
				</doc>
			</param>
			<param name="timespan" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					For topStyles, you can specify how many
					days are used. The only valid
					numbers for this parameter are 1, 7
					and 30.
                </doc>
			</param>
			<param name="option" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					You can cascade results by setting this
					field to "cascade". This means
					that if you make a very specific
					request that has no results, it
					will run similar filters that are
					less specific until results
					appear. For example, using a zip code
					may expand to the state the
					zip code the zip code is in.
                </doc>
			</param>
			<method id="statistics_top_styles_api" name="GET" apigee:displayName="GetTopStylesStatistics">
				<apigee:tags>
					<apigee:tag primary="true">Statistics</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Statistics/type/topStyles?key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Returns the latest styles and top
					styles being sold at Zappos.
                	</doc>
			</method>
		</resource>
		<resource path='/Statistics/type/topStyles?location={"{key}":"{value}"}'>
			<param name="key" required="true" type="xsd:string" style="query"
				default='67d92579a32ecef2694b74abfc00e0f26b10d623' />
			<param name="type" required="true" type="xsd:string" style="query"
				default=''>
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					This string selects the type of
					statistics you want to get. There are
					only two valid types at the
					moment. The latestStyles type will
					return a list of styles sold in
					the last hour, while the topStyles
					will return the top 10 styles
					that have been sold in the past few
					days.
                 </doc>
			</param>
			<param name="filter" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Filter the results by brand,
					categorization or gender.
					Examples:{"brand":{"name":"Nike"}} gets
					only Nike brand products.
					{"categorization":{"categoryType":"Jewelry"}} gets products that
					are Jewlery. Other categorization options include productType and
					subcategoryType. {"gender":"F"} gets products for the female
					gender. You can combine these as well:
					{"gender":"F","brand":{"name":"Nike"},"categorization":{"categoryType":"Jewelry"}}
					gets female Nike brand Jewlery.
                </doc>
			</param>
			<param name="location" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Filters the results by location. You
					can include state or zip
					restrictions. Examples: {"zip":89074} grabs
					from products ordered
					in that zip code. {"state":"CA"} grabs from
					products ordered in
					California.
                </doc>
			</param>
			<param name="startDate" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Limits results by a start date. Must be
					in the format MM/DD/YYYY HH:MM.
				</doc>
			</param>
			<param name="startOrderItemId" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Limits by order item id. You can get
					these from lastestStyles calls to
					this api.
                </doc>
			</param>
			<param name="limit" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					A number that limits the results you
					get. 200 is the maximum number
					of results you can get. Requesting 0
					or less results is a very
					inefficient way to generate an empty list.
				</doc>
			</param>
			<param name="timespan" required="false" type="xsd:string"
				style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					For topStyles, you can specify how many
					days are used. The only valid
					numbers for this parameter are 1, 7
					and 30.
                </doc>
			</param>
			<param name="option" required="false" type="xsd:string" style="query">
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					You can cascade results by setting this
					field to "cascade". This means
					that if you make a very specific
					request that has no results, it
					will run similar filters that are
					less specific until results
					appear. For example, using a zip code
					may expand to the state the
					zip code the zip code is in.
                </doc>
			</param>
			<method id="statistics_top_styles_by_location_api" name="GET" apigee:displayName="GetTopStylesByLocationStatistics">
				<apigee:tags>
					<apigee:tag primary="true">Statistics</apigee:tag>
				</apigee:tags>
				<apigee:authentication required="true" />
				<apigee:example url='/Statistics/type/topStyles?location={"{key}":"{value}"}&amp;key=67d92579a32ecef2694b74abfc00e0f26b10d623' />
				<doc title="" apigee:url="http://developer.zappos.com/docs/api-statistics">
					Returns the latest styles and top
					styles being sold at Zappos.
                	</doc>
			</method>
		</resource>
	</resources>
</application>
